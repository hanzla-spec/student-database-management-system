/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentdbms;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author HP
 */
public class Student_Window extends javax.swing.JFrame {

    /**
     * Creates new form Student_Window
     */
    MySQLconnect myc;
    ButtonGroup bg = null;
    Home h;
    public Student_Window(Home h) {
        initComponents();
        myc = new MySQLconnect();
        bg = new ButtonGroup();
        bg.add(jRadioButtonMale);
        bg.add(jRadioButtonFemale);
        jRadioButtonMale.setSelected(true);
        fillTable();
        this.setLocationRelativeTo(null);
        this.h = h;
    }
    

    //update table method
    public ArrayList<StudentBean> retrieveData(){
        ArrayList<StudentBean> al = new ArrayList<>();
        java.sql.PreparedStatement pst= null;
        java.sql.ResultSet rs = null;
        java.sql.Connection con = myc.getConn();
        try{
            
                String sql = "select * from student";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                StudentBean student;
                while(rs.next()){
                    student = new StudentBean(rs.getInt("roll_no"),rs.getString("name"),rs.getString("branch"),rs.getString("batch"),
                                        rs.getString("gender"),rs.getString("address"),rs.getString("mobile"),rs.getDate("dob"));
                    al.add(student);
            
               }
                
            }
        catch(SQLException e){
              JOptionPane.showMessageDialog(null, "Database connection error" + e);
              
        }
        finally{
                if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
                if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
                if (con != null) try { con.close(); } catch (SQLException ignore) {}
         }
        return al;
    }
    

    
    // fill table funciton
    
    
    public void fillTable(){
        ArrayList<StudentBean> al = retrieveData();
        DefaultTableModel table = (DefaultTableModel)jTableSearchResult.getModel();
        table.setRowCount(0);
        Object [] row = new Object[8];
        for(int i=0;i<al.size(); i++){
            row[0]=  al.get(i).getRoll();
                    row[1] = al.get(i).getName();
                    row[2] = al.get(i).getBranch();
                    row[3] = al.get(i).getBatch();
                    row[4] = al.get(i).getGender();
                    row[5] = al.get(i).getAddress();
                    row[6] = al.get(i).getMobile();
                    row[7] = al.get(i).getDob();
            
            
            table.addRow(row);
          }
        }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldRollNo = new javax.swing.JTextField();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldBranch = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldBatch = new javax.swing.JTextField();
        jRadioButtonMale = new javax.swing.JRadioButton();
        jRadioButtonFemale = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaAddress = new javax.swing.JTextArea();
        jTextFieldMobile = new javax.swing.JTextField();
        jDateChooserDOB = new com.toedter.calendar.JDateChooser();
        jButtonClear = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSearchResult = new javax.swing.JTable();
        jLabelshowinfo = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabelLibrary = new javax.swing.JLabel();
        jLabelFee = new javax.swing.JLabel();
        jLabelLogout = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("STUDENT DATABASE");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(" BIRSA INSTITUTE OF TECHNOLOGY SINDRI, DHANBAD");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(450, 450, 450))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(433, 433, 433))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel3.setText("             Roll No. :");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel4.setText("   Student Name:");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel5.setText("               Branch:");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel6.setText("                 Batch:");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel7.setText("             Address:");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel8.setText("              Mobile:");

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel9.setText("              D.O.B :");

        jTextFieldRollNo.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldRollNo.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jTextFieldRollNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldRollNoKeyReleased(evt);
            }
        });

        jTextFieldName.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldName.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        jTextFieldBranch.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldBranch.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel10.setText("              Gender:");

        jTextFieldBatch.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldBatch.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        jRadioButtonMale.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        jRadioButtonMale.setText("Male");

        jRadioButtonFemale.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        jRadioButtonFemale.setText("Female");

        jTextAreaAddress.setBackground(new java.awt.Color(204, 204, 255));
        jTextAreaAddress.setColumns(20);
        jTextAreaAddress.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jTextAreaAddress.setRows(5);
        jScrollPane1.setViewportView(jTextAreaAddress);

        jTextFieldMobile.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldMobile.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        jDateChooserDOB.setBackground(new java.awt.Color(204, 204, 255));
        jDateChooserDOB.setDateFormatString("yyyy-MM-dd");
        jDateChooserDOB.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N

        jButtonClear.setBackground(new java.awt.Color(0, 153, 255));
        jButtonClear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonClear.setForeground(new java.awt.Color(255, 255, 255));
        jButtonClear.setText("Clear");
        jButtonClear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, null, null));
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonSave.setBackground(new java.awt.Color(0, 153, 255));
        jButtonSave.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonSave.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSave.setText("Save");
        jButtonSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, null, null));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(0, 153, 255));
        jButtonUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setText("Update");
        jButtonUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, null, null));
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(0, 153, 255));
        jButtonDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setText("Delete");
        jButtonDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, null, null));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 255));
        jLabel11.setText("  Search Student Information by Rollno or Name:");

        jTextFieldSearch.setBackground(new java.awt.Color(204, 204, 255));
        jTextFieldSearch.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jTableSearchResult.setBackground(new java.awt.Color(0, 0, 0));
        jTableSearchResult.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTableSearchResult.setForeground(new java.awt.Color(255, 255, 255));
        jTableSearchResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "roll_no", "name", "branch", "batch", "gender", "address", "mobile", "dob"
            }
        ));
        jTableSearchResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSearchResultMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableSearchResult);

        jLabelshowinfo.setBackground(new java.awt.Color(0, 0, 0));
        jLabelshowinfo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelshowinfo.setForeground(new java.awt.Color(255, 255, 255));
        jLabelshowinfo.setText("Student Information:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelshowinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelshowinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 102, 255));
        jLabel13.setText("Other Administration Counters :");

        jLabelLibrary.setBackground(new java.awt.Color(255, 255, 255));
        jLabelLibrary.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelLibrary.setForeground(new java.awt.Color(255, 0, 0));
        jLabelLibrary.setText("         Library Counter");
        jLabelLibrary.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jLabelLibrary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLibraryMouseClicked(evt);
            }
        });

        jLabelFee.setBackground(new java.awt.Color(255, 255, 255));
        jLabelFee.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelFee.setForeground(new java.awt.Color(255, 0, 0));
        jLabelFee.setText("            Fee Counter");
        jLabelFee.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jLabelFee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelFeeMouseClicked(evt);
            }
        });

        jLabelLogout.setBackground(new java.awt.Color(189, 214, 218));
        jLabelLogout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelLogout.setForeground(new java.awt.Color(255, 0, 51));
        jLabelLogout.setText("      Logout");
        jLabelLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLogoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldRollNo)
                    .addComponent(jTextFieldName)
                    .addComponent(jTextFieldBranch)
                    .addComponent(jTextFieldBatch)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jRadioButtonMale, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jRadioButtonFemale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                    .addComponent(jTextFieldMobile)
                    .addComponent(jDateChooserDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(jButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(282, 282, 282))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelFee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelLibrary, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                        .addGap(108, 108, 108))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldRollNo, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                        .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTextFieldBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jRadioButtonFemale)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButtonMale, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelLibrary, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelFee, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jDateChooserDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(jLabelLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)))
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(164, 164, 164))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        java.sql.PreparedStatement pst=null;
        java.sql.ResultSet rs = null;
        java.sql.Connection con = myc.getConn();
        try{
            String roll = jTextFieldRollNo.getText();
            String name = jTextFieldName.getText();
            String branch = jTextFieldBranch.getText();
            String batch =  jTextFieldBatch.getText();
            String address = jTextAreaAddress.getText();
            String mobile = jTextFieldMobile.getText();
            String gender = "Male";
            if (jRadioButtonFemale.isSelected()){
                gender = "Female";
            }
            java.sql.Date dob = new java.sql.Date(jDateChooserDOB.getDate().getTime()); 
        
            String sql = "update student set name=?, branch=?,batch=?,address=?,mobile=?,gender=?,dob=? where roll_no=?";
            pst = con.prepareStatement(sql);
            pst.setString(1, name);
            pst.setString(2, branch);
            pst.setString(3, batch);
            pst.setString(4, address);
            pst.setString(5,mobile);
            pst.setString(6, gender);
            pst.setDate(7,dob);
            pst.setInt(8, Integer.parseInt(roll));
            int i = pst.executeUpdate();
            if(i>=1){
                JOptionPane.showMessageDialog(null,"Updation successful...");
                jButtonClearActionPerformed(evt);
                fillTable();
            }else{
                JOptionPane.showMessageDialog(null, "Updation Error!");
            }
        
        
        }catch(Exception e){
              JOptionPane.showMessageDialog(null, "Database connection error" + e);
            }
            finally{
                if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
                if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
                if (con != null) try { con.close(); } catch (SQLException ignore) {}
            }
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
        jTextFieldRollNo.setText("");
        jTextFieldName.setText("");
        jTextFieldMobile.setText("");
        jTextFieldBranch.setText("");
        jTextFieldBatch.setText("");
        jTextAreaAddress.setText("");
        jDateChooserDOB.setDate(null);
        jRadioButtonMale.setSelected(true);
        
               
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        String roll = jTextFieldRollNo.getText();
        String name = jTextFieldName.getText();
        String branch = jTextFieldBranch.getText();
        String batch =  jTextFieldBatch.getText();
        String address = jTextAreaAddress.getText();
        String mobile = jTextFieldMobile.getText();
        String gender = "Male";
        if (jRadioButtonFemale.isSelected()){
            gender = "Female";
        }
        java.sql.Date dob = new java.sql.Date(jDateChooserDOB.getDate().getTime());
        //validation logic
        if(roll.equals("") || name.equals("") || branch.equals("")|| batch.equals("")||
                address.equals("")|| mobile.equals("")|| gender.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Kindly fill all the fields");
            
        }else if ( dob == null ){
            JOptionPane.showMessageDialog(null, "please fill Date of Birth field");
        }else{
            
            // insertion login
            java.sql.PreparedStatement pst = null;
            java.sql.ResultSet rs = null;
            java.sql.Connection con = myc.getConn();
            try{
                String sql = "insert into student(roll_no,name,branch,batch,gender,address,mobile,dob) values(?,?,?,?,?,?,?,?)";
                pst = con.prepareStatement(sql);
                pst.setInt(1,Integer.parseInt(roll));
                pst.setString(2, name);
                pst.setString(3,branch);
                pst.setString(4,batch);
                pst.setString(5,gender);
                pst.setString(6,address);
                pst.setString(7, mobile);
                pst.setDate(8, dob);
                int i = pst.executeUpdate();
                if(i>=1){
                    JOptionPane.showMessageDialog(null,"Saved successfully...");
                    jButtonClearActionPerformed(evt);
                    fillTable();
                    
                    // update libdues table
                    java.sql.PreparedStatement pst1 = null;
                    java.sql.Connection con1 = myc.getConn();
                    try{
                        String sql1 = "insert into libdues(roll_no)  values(?)";
                        pst1 = con1.prepareStatement(sql1);
                        pst1.setInt(1,Integer.parseInt(roll));
                        int p = pst1.executeUpdate();
                        if(p>=1){
                           System.out.println("libdues updated");
                        } 
                        else{
                            System.out.println("some problem occured here....");
                        }
                        sql1 = "insert into fee(roll_no) values(?)";
                        pst1 = con1.prepareStatement(sql1);
                        pst1.setInt(1,Integer.parseInt(roll));
                        int j = pst1.executeUpdate();
                        if(j>=1){
                            System.out.println("fee table updated");
                        }else{
                            System.out.println("some error occured");
                        }
                        
                        sql1 = "insert into semester(roll_no) values(?)";
                        pst1 = con1.prepareStatement(sql1);
                        pst1.setInt(1,Integer.parseInt(roll));
                        int k = pst1.executeUpdate();
                        if(k>=1){
                            System.out.println("fee table updated");
                        }else{
                            System.out.println("some error occured");
                        }
                        
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Database connection error" + e);
            
                    }
                    finally{
               
                        //if (rs1 != null) try { rs1.close(); } catch (SQLException ignore) {}
                        if (pst1 != null) try { pst1.close(); } catch (SQLException ignore) {}
                        if (con1 != null) try { con1.close(); } catch (SQLException ignore) {}
                    }
                    
                    
                    
                    
                    
                }else{
                    JOptionPane.showMessageDialog(null, "Insertion Failed!");
                }
                
            
            }catch(Exception e){
              JOptionPane.showMessageDialog(null, "Database connection error" + e);
            }
            finally{
                if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
                if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
                if (con != null) try { con.close(); } catch (SQLException ignore) {}
            }
        }
        
        
        
        
        
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTextFieldRollNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRollNoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRollNoKeyReleased

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        // TODO add your handling code here:
        String search_key = jTextFieldSearch.getText();
        ArrayList<StudentBean> al = new ArrayList<>();
        
        if(!search_key.equals("")){   
          
            // perform search operation
            java.sql.PreparedStatement pst = null;
            java.sql.ResultSet rs = null;
            java.sql.Connection con = myc.getConn();
            jLabelshowinfo.setText("Search results:");
            try{
                 
                int sk = Integer.parseInt(search_key);
                // search by roll_no
                try{
               
                String sql = "select * from student where roll_no ="+sk;
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                StudentBean student;
                while(rs.next()){
                    student = new StudentBean(rs.getInt("roll_no"),rs.getString("name"),rs.getString("branch"),rs.getString("batch"),
                                        rs.getString("gender"),rs.getString("address"),rs.getString("mobile"),rs.getDate("dob"));
                    al.add(student);
                }
                
                DefaultTableModel table = (DefaultTableModel)jTableSearchResult.getModel();
                table.setRowCount(0);
                Object [] row = new Object[8];
                for(int i=0;i<al.size(); i++){
                        
                    row[0]=  al.get(i).getRoll();
                    row[1] = al.get(i).getName();
                    row[2] = al.get(i).getBranch();
                    row[3] = al.get(i).getBatch();
                    row[4] = al.get(i).getGender();
                    row[5] = al.get(i).getAddress();
                    row[6] = al.get(i).getMobile();
                    row[7] = al.get(i).getDob();
                    
            
            
                    table.addRow(row);
          
                }
                
            }catch(SQLException ex){
              JOptionPane.showMessageDialog(null, "Database connection error" + ex);
            }
            finally{
                if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
                if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
                if (con != null) try { con.close(); } catch (SQLException ignore) {}
            }    
                
            }catch(NumberFormatException e){
                  // search by name
                try{
               
               
                String sql = "select * from student where name like '%"+search_key+"%'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                StudentBean student;
                while(rs.next()){
                    student = new StudentBean(rs.getInt("roll_no"),rs.getString("name"),rs.getString("branch"),rs.getString("batch"),
                                        rs.getString("gender"),rs.getString("address"),rs.getString("mobile"),rs.getDate("dob"));
                    al.add(student);
                }
                DefaultTableModel table = (DefaultTableModel)jTableSearchResult.getModel();
                table.setRowCount(0);
                Object [] row = new Object[8];
                for(int i=0;i<al.size(); i++){
                        
                    row[0]=  al.get(i).getRoll();
                    row[1] = al.get(i).getName();
                    row[2] = al.get(i).getBranch();
                    row[3] = al.get(i).getBatch();
                    row[4] = al.get(i).getGender();
                    row[5] = al.get(i).getAddress();
                    row[6] = al.get(i).getMobile();
                    row[7] = al.get(i).getDob();
            
            
                    table.addRow(row);
          
                }
                
            }catch(SQLException ex){
              JOptionPane.showMessageDialog(null, "Database connection error" + ex);
            }
            finally{
                if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
                if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
                if (con != null) try { con.close(); } catch (SQLException ignore) {}
            }
                
            }
            
            finally{
                if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
                if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
                if (con != null) try { con.close(); } catch (SQLException ignore) {}
            }
            
            
        }
        else{
            fillTable();
            jLabelshowinfo.setText("Student Information:");
        }
        
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void jTableSearchResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSearchResultMouseClicked
        // TODO add your handling code here:
        java.sql.PreparedStatement pst=null;
        java.sql.ResultSet rs=null;
        java.sql.Connection con = myc.getConn();
        try{
            int row = jTableSearchResult.getSelectedRow();
            String roll = jTableSearchResult.getModel().getValueAt(row,0).toString();
            String sql = "select * from student where roll_no="+roll;
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if(rs.next()){
                jTextFieldRollNo.setText(rs.getString("roll_no"));
                jTextFieldName.setText(rs.getString("name"));
                jTextFieldBranch.setText(rs.getString("branch"));
                jTextFieldBatch.setText(rs.getString("batch"));
                jTextAreaAddress.setText(rs.getString("address"));
                jTextFieldMobile.setText(rs.getString("mobile"));
                java.sql.Date date = new java.sql.Date(rs.getDate("dob").getTime());
                jDateChooserDOB.setDate(date);
                String gender = rs.getString("gender");
                if(gender.equals("Male"))
                    jRadioButtonMale.setSelected(true);
                else
                    jRadioButtonFemale.setSelected(true);
                
            }
        }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error Occured!"+e);
            }
            finally{
                
             if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
             if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
             if (con != null) try { con.close(); } catch (SQLException ignore) {}
           }
    }//GEN-LAST:event_jTableSearchResultMouseClicked

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        String roll = jTextFieldRollNo.getText();
        int p = JOptionPane.showConfirmDialog(null, "Do you relly want to delete "+
                                  roll+" Data from Student database?", "Delete", JOptionPane.YES_NO_OPTION);
        if(p == 0){
            java.sql.PreparedStatement pst = null;
            //java.sql.ResultSet rs = null;
            java.sql.Connection con = myc.getConn();
            try{
            
              String sql = "delete from student where roll_no ="+roll;
              pst = con.prepareStatement(sql);
              int i = pst.executeUpdate();
              if(i>=1){
                  JOptionPane.showMessageDialog(null, "Record Deleted Successfully...");
                  fillTable();
                  jButtonClearActionPerformed(evt);
              }else{
                  JOptionPane.showMessageDialog(null," Deletion Error!");
              }
            
        }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error Occured!"+e);
            }
            finally{
                
             //if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
             if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
             if (con != null) try { con.close(); } catch (SQLException ignore) {}
           }
        }else{
            System.out.println("Cancelled");
        }
        
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jLabelLibraryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLibraryMouseClicked
        // TODO add your handling code here:
        
        LibraryCounter lc = new LibraryCounter(this);
        this.dispose();
        lc.show();
        
        
    }//GEN-LAST:event_jLabelLibraryMouseClicked

    private void jLabelFeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelFeeMouseClicked
        // TODO add your handling code here:
        this.dispose();
        FeeCounter fc = new FeeCounter(this);
        fc.show();
        
    }//GEN-LAST:event_jLabelFeeMouseClicked

    private void jLabelLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLogoutMouseClicked
        // TODO add your handling code here:
        this.h.setGreeting();
        this.h.show();
        this.dispose();
    }//GEN-LAST:event_jLabelLogoutMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student_Window(new Home()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonUpdate;
    private com.toedter.calendar.JDateChooser jDateChooserDOB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelFee;
    private javax.swing.JLabel jLabelLibrary;
    private javax.swing.JLabel jLabelLogout;
    private javax.swing.JLabel jLabelshowinfo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButtonFemale;
    private javax.swing.JRadioButton jRadioButtonMale;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableSearchResult;
    private javax.swing.JTextArea jTextAreaAddress;
    private javax.swing.JTextField jTextFieldBatch;
    private javax.swing.JTextField jTextFieldBranch;
    private javax.swing.JTextField jTextFieldMobile;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldRollNo;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
