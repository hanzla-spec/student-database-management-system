/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentdbms;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.Date ;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author HP
 */
public class LibraryCounter extends javax.swing.JFrame {

    /**
     * Creates new form LibraryCounter
     */
    MySQLconnect myc;
    Student_Window sw;
    public LibraryCounter(Student_Window sw) {
        initComponents();
        myc = new MySQLconnect();
        this.setLocationRelativeTo(null);
        fillTable();
        this.sw = sw;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // retrieve data of book table
    public ArrayList<BookBean> retrieveData(){
        ArrayList<BookBean> al = new ArrayList<>(0);
        PreparedStatement pst = null;
        ResultSet rs = null;
        Connection con = myc.getConn();
        try{
            String sql = "select * from book";
            pst = con.prepareStatement(sql);
            rs  = pst.executeQuery();
            BookBean book;
            while(rs.next()){
                book = new BookBean(rs.getInt("roll_no"),rs.getInt("book_id"),rs.getString("name"),
                        rs.getDate("issue_date"),rs.getDate("return_date"));
                al.add(book);
            }
            
        }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Book Already issued!");
                
            }
            finally{
                
             if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
             if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
             if (con != null) try { con.close(); } catch (SQLException ignore) {}
           }
        return al;
    }
    
    // fill jtable function
    
    public void fillTable(){
        ArrayList<BookBean> al = retrieveData();
        DefaultTableModel model = (DefaultTableModel)jTableSearch.getModel();
        model.setRowCount(0);
        Object [] row = new Object[5];
        for(int i=0;i<al.size();i++){
            row[0] = al.get(i).getRoll_no();
            row[1] = al.get(i).getBook_id();
            row[2] = al.get(i).getName();
            row[3] = al.get(i).getIssuedate();
            row[4] = al.get(i).getReturndate();
            
            model.addRow(row);
            
        }
    }
    
    
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldRollNo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSearch = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelDues = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldBookId = new javax.swing.JTextField();
        jDateChooserDate = new com.toedter.calendar.JDateChooser();
        jButtonIssue = new javax.swing.JButton();
        jButtonReturn = new javax.swing.JButton();
        jLabelBack = new javax.swing.JLabel();
        jButtonClear = new javax.swing.JButton();
        jButtonPay = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Student Library Information");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Student Roll number:");

        jTextFieldRollNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldRollNo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 255), 1, true));
        jTextFieldRollNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldRollNoKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("           Student Name:");

        jTextFieldName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 255), 1, true));

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        jTableSearch.setBackground(new java.awt.Color(0, 0, 0));
        jTableSearch.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTableSearch.setForeground(new java.awt.Color(255, 255, 255));
        jTableSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "roll_no", "book_id", "name", "issue_date", "return_date"
            }
        ));
        jScrollPane1.setViewportView(jTableSearch);

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("SEARCH RESULTS:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setText("                Total Dues: ");

        jLabelDues.setBackground(new java.awt.Color(255, 255, 255));
        jLabelDues.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelDues.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 255), 1, true));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Rs.");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 255));
        jLabel7.setText("BOOK ID:");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 255));
        jLabel8.setText("ISSUE/RETURN Date:");

        jTextFieldBookId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldBookId.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 255), 1, true));
        jTextFieldBookId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBookIdKeyReleased(evt);
            }
        });

        jDateChooserDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 255), 1, true));
        jDateChooserDate.setDateFormatString("dd-MM-yyyy");

        jButtonIssue.setBackground(new java.awt.Color(0, 204, 255));
        jButtonIssue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonIssue.setForeground(new java.awt.Color(255, 255, 255));
        jButtonIssue.setText("ISSUE");
        jButtonIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIssueActionPerformed(evt);
            }
        });

        jButtonReturn.setBackground(new java.awt.Color(255, 0, 102));
        jButtonReturn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonReturn.setForeground(new java.awt.Color(255, 255, 255));
        jButtonReturn.setText("RETURN");
        jButtonReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReturnActionPerformed(evt);
            }
        });

        jLabelBack.setBackground(new java.awt.Color(255, 255, 255));
        jLabelBack.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelBack.setForeground(new java.awt.Color(0, 102, 255));
        jLabelBack.setText("     Go Back <-");
        jLabelBack.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        jLabelBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBackMouseClicked(evt);
            }
        });

        jButtonClear.setBackground(new java.awt.Color(255, 255, 255));
        jButtonClear.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonClear.setForeground(new java.awt.Color(0, 153, 255));
        jButtonClear.setText("Clear Fields");
        jButtonClear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonPay.setBackground(new java.awt.Color(0, 102, 255));
        jButtonPay.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButtonPay.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPay.setText("Pay dues");
        jButtonPay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButtonPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldRollNo)
                    .addComponent(jTextFieldName)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabelDues, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPay, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooserDate, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(jTextFieldBookId))
                        .addContainerGap(102, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonIssue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonClear, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelBack, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                            .addComponent(jButtonReturn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(69, 69, 69))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldRollNo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldBookId, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooserDate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonReturn, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(jButtonIssue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonClear, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelDues, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(11, 11, 11)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldRollNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRollNoKeyReleased
        // TODO add your handling code here:
        String search_key = jTextFieldRollNo.getText();
        if(!search_key.equals(""))
        {
            // for name retrival from student table
            
            
               PreparedStatement pst =null;
               ResultSet rs = null;
               Connection con = myc.getConn();
               try{
                   
                   String sql = "select name from student where roll_no="+search_key;
                   pst = con.prepareStatement(sql);
                   rs = pst.executeQuery();
                   if(rs.next()){
                       jTextFieldName.setText(rs.getString("name"));
                       
                   }else{
                       jTextFieldName.setText("");
                       jLabelDues.setText("");
                   }
                   
                   
               }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error Occured!"+e);
               }
                finally{
                
                     if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
                     if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
                     if (con != null) try { con.close(); } catch (SQLException ignore) {}
               }
        // logic for jTable updaion as per search key realeased
               pst =null;
               rs = null;
               con = myc.getConn();
               
               try{
                   
                   String sql = "select * from book where roll_no="+search_key;
                   pst = con.prepareStatement(sql);
                   rs = pst.executeQuery();
                   ArrayList<BookBean> al = new ArrayList<>(0);
                   BookBean book;
                   while(rs.next()){
                        book = new BookBean(rs.getInt("roll_no"),rs.getInt("book_id"),rs.getString("name"),
                                                         rs.getDate("issue_date"),rs.getDate("return_date"));
                        al.add(book);
                  
                   }
                   
                    DefaultTableModel model = (DefaultTableModel)jTableSearch.getModel();
                    model.setRowCount(0);
                    Object [] row = new Object[5];
                    for(int i=0;i<al.size();i++){
                        row[0] = al.get(i).getRoll_no();
                        row[1] = al.get(i).getBook_id();
                        row[2] = al.get(i).getName();
                        row[3] = al.get(i).getIssuedate();
                        row[4] = al.get(i).getReturndate();
            
                        model.addRow(row);
            
        
                    }
                    
                    sql = "select total_dues from libdues where roll_no="+search_key;
                    pst = con.prepareStatement(sql);
                    rs = pst.executeQuery();
                    if(rs.next()){
                        jLabelDues.setText(rs.getString("total_dues"));
                    }else{
                        System.out.println("no such student dues present");
                    }
                   
               }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error Occured!"+e);
               }
                finally{
                
                     if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
                     if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
                     if (con != null) try { con.close(); } catch (SQLException ignore) {}
               }
            
        
        
        }
        else{
            jTextFieldName.setText("");
            jLabelDues.setText("");
            fillTable();
        }
        
    }//GEN-LAST:event_jTextFieldRollNoKeyReleased

    private void jButtonIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIssueActionPerformed
        // TODO add your handling code here:
        
        String roll = jTextFieldRollNo.getText();
        Date date = new Date(jDateChooserDate.getDate().getTime());
        String bookid = jTextFieldBookId.getText();
        String name = jTextFieldName.getText();
        if(roll.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter Roll number");
            jTextFieldRollNo.grabFocus();
        }else if(bookid.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter Book ID");
            jTextFieldBookId.grabFocus();
        }
        else if(date == null){
            JOptionPane.showMessageDialog(null, "Please select the Date");
            jTextFieldBookId.grabFocus();
        }else{
            
            PreparedStatement pst = null;
            Connection con = myc.getConn();
            
            try{
                String sql = "insert into book(roll_no, book_id,name, issue_date) values(?,?,?,?)";
                pst = con.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(roll));
                pst.setInt(2, Integer.parseInt(bookid));
                pst.setString(3, name);
                pst.setDate(4,date);
                int i = pst.executeUpdate();
                if(i>=1){
                
                    JOptionPane.showMessageDialog(null, "Issued Successfully...");
                    jButtonClearActionPerformed(evt);
                    fillTable();
                    // pending codes
            
                }else{
                    JOptionPane.showMessageDialog(null, "Issuing Error");
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Book Already issued!");
                
            }
            finally{
                
             //if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
             if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
             if (con != null) try { con.close(); } catch (SQLException ignore) {}
           }
            
           
            
            
        }
        
    }//GEN-LAST:event_jButtonIssueActionPerformed

    private void jButtonReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReturnActionPerformed
        // TODO add your handling code here:
        String roll = jTextFieldRollNo.getText();
        String name = jTextFieldName.getText();
        String bookid = jTextFieldBookId.getText();
        Date date = new Date(jDateChooserDate.getDate().getTime());
        if(roll.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter Roll number");
            jTextFieldRollNo.grabFocus();
        }else if(bookid.equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please enter Book ID");
            jTextFieldBookId.grabFocus();
        }
        else if(date == null){
            JOptionPane.showMessageDialog(null, "Please select the Date");
            jTextFieldBookId.grabFocus();
        }else{
            
            // for return date updation
            PreparedStatement pst = null;
            Connection con = myc.getConn();
            try{
                String sql = "update book set book_id = ?,return_date = ? where book_id="+bookid;
                pst = con.prepareStatement(sql);
                pst.setInt(1,Integer.parseInt(bookid)*(-1));
                pst.setDate(2,date);
                int i = pst.executeUpdate();
                if(i>=1){
                    
                    JOptionPane.showMessageDialog(null, "Returned Successfully...");
                    jButtonClearActionPerformed(evt);
                    fillTable();
                    
                }else{
                    JOptionPane.showMessageDialog(null, "Returning Error");
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error Occured!"+e);
            }
            finally{
                
             //if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
             if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
             if (con != null) try { con.close(); } catch (SQLException ignore) {}
           }
            
            
            
            // for Dues calculatons;
            
            pst = null;
            con = myc.getConn();
            ResultSet rs  = null;
            try{
                int bookidneg = (-1)*Integer.parseInt(bookid);
                String sql = "select datediff(return_date,issue_date) from book where book_id="+bookidneg;
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                if(rs.next()){
                    //dues code logic
                    int days = rs.getInt(1);
                    int cdues = (days-15)/4;//due for the current book which is being returned
                    int pdues= 0; // previous dues
                    PreparedStatement pst1 = null;
                    Connection con1 = myc.getConn();
                    ResultSet rs1=null;
                    try{
                        System.out.println("hey "+roll);
                        String sql1 = "select total_dues from libdues where roll_no="+roll;
                        pst1 = con1.prepareStatement(sql1);
                        rs1 = pst1.executeQuery();
                        if(rs1.next()){
                            pdues = rs1.getInt("total_dues");
                          
                            
                        }else{
                            JOptionPane.showMessageDialog(null, "No Such roll_no present in libdues table");
                        }
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Error Occured!"+e);
            
                    }
                    finally{
                
                            if (rs1 != null) try { rs1.close(); } catch (SQLException ignore) {}
                            if (pst1 != null) try { pst1.close(); } catch (SQLException ignore) {}
                            if (con1!= null) try { con1.close(); } catch (SQLException ignore) {}
                    }
                    // update total dues
                    pst1=null;
                    rs1 =null;
                    con1 = myc.getConn();
                    try{
                        String sql1 = "update libdues set total_dues=? where roll_no="+roll;
                        pst1 = con1.prepareStatement(sql1);
                        pst1.setInt(1,pdues+cdues);
                        int i = pst1.executeUpdate();
                        if(i>=1){
                            System.out.println("dues updated for roll "+roll);
                        }else{
                            JOptionPane.showMessageDialog(null, "No Such roll_no present in libdues table");
                        }
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Error Occured!"+e);
            
                    }
                    finally{
                
                            if (rs1 != null) try { rs1.close(); } catch (SQLException ignore) {}
                            if (pst1 != null) try { pst1.close(); } catch (SQLException ignore) {}
                            if (con1!= null) try { con1.close(); } catch (SQLException ignore) {}
                    }
                    
                    
                }else{
                    JOptionPane.showMessageDialog(null, "No such book id "+bookidneg);
                
                }
            
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error Occured!"+e);
            }
            finally{
                
             if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
             if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
             if (con != null) try { con.close(); } catch (SQLException ignore) {}
           }
            
            
            // deleting the returned book row
            
            pst = null;
            con = myc.getConn();
            try{
                String sql = "delete from book where book_id=" + ((-1)*Integer.parseInt(bookid)) ;
                pst = con.prepareStatement(sql);
                int i = pst.executeUpdate();
                if(i>=1){
                    fillTable();
                    System.out.println("returned book data deleted");
                }else{
                    System.out.println("some error occured while deleting returned boob");
                }
            }catch(Exception e){JOptionPane.showMessageDialog(null, "Error Occured!"+e);}
            finally{//if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
             if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
             if (con != null) try { con.close(); } catch (SQLException ignore) {}
            }
            
        }
        
    }//GEN-LAST:event_jButtonReturnActionPerformed

    private void jTextFieldBookIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBookIdKeyReleased
        // TODO add your handling code here:
        String search_key = jTextFieldBookId.getText();
        if(!search_key.equals(""))
        {
            
            // for filling the text feilds ad per the key realesed event
               PreparedStatement pst =null;
               ResultSet rs = null;
               Connection con = myc.getConn();
               try{
                   
                   String sql = "select roll_no,name from book where book_id="+search_key;
                   pst = con.prepareStatement(sql);
                   rs = pst.executeQuery();
                   if(rs.next()){
                       jTextFieldName.setText(rs.getString("name"));
                       jTextFieldRollNo.setText(rs.getString("roll_no"));
                   
                   }else{
                       System.out.println("It seems you want to issue this book");
                   }
               }catch(Exception e){
                   JOptionPane.showMessageDialog(null, "Error Occured!"+e);
            
               }
               finally{
                
                   if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
                   if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
                   if (con != null) try { con.close(); } catch (SQLException ignore) {}
               }
               
               // for updating the table as per the key released
               pst =null;
               rs = null;
               con = myc.getConn();
               
               try{
                   
                   String sql = "select * from book where book_id="+search_key;
                   pst = con.prepareStatement(sql);
                   rs = pst.executeQuery();
                   ArrayList<BookBean> al = new ArrayList<>(0);
                   BookBean book;
                   while(rs.next()){
                        book = new BookBean(rs.getInt("roll_no"),rs.getInt("book_id"),rs.getString("name"),
                                                         rs.getDate("issue_date"),rs.getDate("return_date"));
                        al.add(book);
                  
                   }
                   
                    DefaultTableModel model = (DefaultTableModel)jTableSearch.getModel();
                    model.setRowCount(0);
                    Object [] row = new Object[5];
                    for(int i=0;i<al.size();i++){
                        row[0] = al.get(i).getRoll_no();
                        row[1] = al.get(i).getBook_id();
                        row[2] = al.get(i).getName();
                        row[3] = al.get(i).getIssuedate();
                        row[4] = al.get(i).getReturndate();
            
                        model.addRow(row);
                        
                    }
                   
                   
               }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error Occured!"+e);
               }
                finally{
                
                     if (rs != null) try { rs.close(); } catch (SQLException ignore) {}
                     if (pst != null) try { pst.close(); } catch (SQLException ignore) {}
                     if (con != null) try { con.close(); } catch (SQLException ignore) {}
               }
               
        }
        else{
            System.out.println("Empty Book Search Id");
            fillTable();
        }
    }//GEN-LAST:event_jTextFieldBookIdKeyReleased

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
        jTextFieldRollNo.setText("");
        jTextFieldName.setText("");
        jTextFieldBookId.setText("");
        jLabelDues.setText("");
        jDateChooserDate.setDate(null);
        fillTable();
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jLabelBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackMouseClicked
        // TODO add your handling code here:
        this.dispose();
        this.sw.show();
    }//GEN-LAST:event_jLabelBackMouseClicked

    private void jButtonPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPayActionPerformed
        // TODO add your handling code here:
        String roll = jTextFieldRollNo.getText();
        PreparedStatement pst = null;
        ResultSet rs = null;
        Connection con = myc.getConn();
        try{
            
            String sql = "update libdues set total_dues = ? where roll_no="+roll;
            pst = con.prepareStatement(sql);
            pst.setInt(1,0);
            int i = pst.executeUpdate();
            if(i>=1){
                System.out.println(roll + " has paid dues");
                jLabelDues.setText("0");
            }       
            else{
                System.out.println("some error occured in due payment");
            }
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, "Error Occured"+e);
            
        }finally{
            if(rs!=null){try{rs.close();}catch(SQLException ignore){}}
            if(pst!=null){ try{pst.close();}catch(SQLException ignore){} }
            if(con!=null){  try{con.close();}catch(SQLException ignore){} }
        }
    }//GEN-LAST:event_jButtonPayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibraryCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibraryCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibraryCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibraryCounter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LibraryCounter(new Student_Window(new Home())).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonIssue;
    private javax.swing.JButton jButtonPay;
    private javax.swing.JButton jButtonReturn;
    private com.toedter.calendar.JDateChooser jDateChooserDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBack;
    private javax.swing.JLabel jLabelDues;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSearch;
    private javax.swing.JTextField jTextFieldBookId;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldRollNo;
    // End of variables declaration//GEN-END:variables
}
